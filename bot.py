import telebot
import config

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('static/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    #keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üïµÔ∏è‚Äç‚ôÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä')
    item2 = types.KeyboardButton('ü§µ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º')

    markup.add(item1, item2)

    bot.send_message(message.chat.id,"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def m(message):
    if message.chat.type == 'private':
        if message.text == 'ü§µ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º':
            bot.send_message(message.chat.id, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç')
        elif message.text == 'üïµÔ∏è‚Äç‚ôÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä':
            markup = types.InlineKeyboardMarkup()

            markup.row(types.InlineKeyboardButton("–ò—Å–ø–∞—Ä–∏—Ç–µ–ª–∏", callback_data='evaporator'))
            markup.row(types.InlineKeyboardButton("–§–∏—Ä–º–µ–Ω–Ω—ã–µ —Ç–∞–±–∞–∫–∏", callback_data='tobacco'))
            markup.row(types.InlineKeyboardButton("–ó–∞–∂–∏–≥–∞–ª–∫–∏", callback_data='lighter'))

            bot.send_message(message.chat.id, '–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')
    bot.send_message(message.chat.id, message.text)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        try:
            if call.message:
                if call.data == 'evaporator':
                    markup = types.InlineKeyboardMarkup(row_width=3)
                    item1 = types.InlineKeyboardButton("–ò—Å–ø–∞—Ä–∏—Ç–µ–ª–∏ –º–∞—Ä–∫–∞ 1", callback_data='evaporator1')
                    item2 = types.InlineKeyboardButton("–ò—Å–ø–∞—Ä–∏—Ç–µ–ª–∏ –º–∞—Ä–∫–∞ 2", callback_data='evaporator2')
                    item3 = types.InlineKeyboardButton("–ò—Å–ø–∞—Ä–∏—Ç–µ–ª–∏ –º–∞—Ä–∫–∞ 3", callback_data='evaporator3')

                    markup.add(item1, item2, item3)

                    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –∏—Å–ø–∞—Ä–∏—Ç–µ–ª—å?', reply_markup=markup)
                elif call.data == 'tobacco':

                    markup = types.InlineKeyboardMarkup(row_width=3)
                    item1 = types.InlineKeyboardButton("–¢–∞–±–∞–∫ –º–∞—Ä–∫–∞ 1", callback_data='tobacco1')
                    item2 = types.InlineKeyboardButton("–¢–∞–±–∞–∫ –º–∞—Ä–∫–∞ 2", callback_data='tobacco2')
                    item3 = types.InlineKeyboardButton("–¢–∞–±–∞–∫ –º–∞—Ä–∫–∞ 3", callback_data='tobacco3')

                    markup.add(item1, item2, item3)

                    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∞–±–∞–∫?', reply_markup=markup)

                elif call.data == 'lighter':

                    markup = types.InlineKeyboardMarkup(row_width=3)
                    item1 = types.InlineKeyboardButton("–ó–∞–∂–∏–≥–∞–ª–∫–∞ 1", callback_data='lighter1')
                    item2 = types.InlineKeyboardButton("–ó–∞–∂–∏–≥–∞–ª–∫–∞ 2", callback_data='lighter2')
                    item3 = types.InlineKeyboardButton("–ó–∞–∂–∏–≥–∞–ª–∫–∞ 3", callback_data='lighter3')

                    markup.add(item1, item2, item3)

                    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –∑–∞–∂–∏–≥–∞–ª–∫—É?', reply_markup=markup)


        except Exception as e:
            print(repr(e))

#RUN
bot.polling(none_stop=True)